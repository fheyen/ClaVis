{
    "data": {
        "title": "MNIST",
        "dataset": "keras_mnist",
        "subset_train": 1,
        "subset_test": 1,
        "test_size": 0.2,
        "scale": true,
        "random_state": 0
    },
    "projections": [
        {
            "title": "PCA",
            "method": "pca",
            "random_state": 0
        }
    ],
    "classifiers": [
        {
            "title": "ðŸŸŠ Optimal",
            "method": "optimal"
        },
        {
            "title": "â“ƒ Naive",
            "method": "naive"
        },
        {
            "title": "M CNN test",
            "method": "mnist_cnn",
            "save_model": false,
            "early_stopping": false,
            "early_stopping_patience": 10,
            "epochs": 2,
            "steps_per_epoch": 100,
            "batch_size": 32,
            "random_state": 0
        },
        {
            "title": "C CNN test",
            "method": "cifar10_cnn",
            "save_model": false,
            "data_augmentation": false,
            "early_stopping": false,
            "early_stopping_patience": 10,
            "epochs": 2,
            "steps_per_epoch": 100,
            "batch_size": 32,
            "random_state": 42
        },
        {
            "title": "M CNN b{batch_size}",
            "method": "mnist_cnn",
            "save_model": false,
            "early_stopping": true,
            "early_stopping_patience": 10,
            "epochs": 100,
            "steps_per_epoch": 1000,
            "batch_size": {
                "is_meta": true,
                "values": [
                    16,
                    32,
                    64
                ]
            },
            "random_state": 0
        },
        {
            "title": "C CNN b{batch_size} aug:{data_augmentation}",
            "method": "cifar10_cnn",
            "save_model": false,
            "data_augmentation": {
                "is_meta": true,
                "values": [
                    true,
                    false
                ]
            },
            "early_stopping": false,
            "early_stopping_patience": 10,
            "epochs": 100,
            "steps_per_epoch": 1000,
            "batch_size": {
                "is_meta": true,
                "values": [
                    16,
                    32,
                    64
                ]
            },
            "random_state": 42
        },
        {
            "title": "MLPC 2x100",
            "method": "mlpc",
            "hidden_layer_sizes": [
                100,
                100
            ],
            "solver": "adam",
            "activation": "relu",
            "random_state": 0
        },
        {
            "title": "MLP {hidden_layer_sizes_short}",
            "method": "mlpc_keras",
            "hidden_layer_sizes_short": {
                "is_meta": true,
                "values": [
                    "3x200",
                    "3x500",
                    "5x200",
                    "5x500",
                    "7x200",
                    "7x500"
                ]
            },
            "activation": "relu",
            "dropout": 0.5,
            "optimizer": "adam",
            "learning_rate_init": 0.001,
            "epochs": 300,
            "early_stopping": true,
            "early_stopping_patience": 30,
            "batch_size": 64,
            "random_state": 42,
            "save_model": false
        },
        {
            "title": "SVM {kernel}",
            "method": "svm",
            "kernel": {
                "is_meta": true,
                "values": [
                    "rbf",
                    "poly",
                    "linear"
                ]
            },
            "degree": 3,
            "C": 1.0,
            "random_state": 42
        },
        {
            "title": "RF {n_estimators}",
            "method": "randomforest",
            "n_estimators": {
                "is_meta": true,
                "values": [
                    1,
                    25,
                    50,
                    100,
                    200,
                    500
                ]
            },
            "random_state": 42
        },
        {
            "title": "KNN {n_neighbors}",
            "method": "kneighbors",
            "n_neighbors": {
                "is_meta": true,
                "values": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    8,
                    10,
                    16,
                    32
                ]
            },
            "random_state": 42
        },
        {
            "title": "Ada {n_estimators}",
            "method": "adaboost",
            "n_estimators": {
                "is_meta": true,
                "values": [
                    1,
                    25,
                    50,
                    100,
                    200,
                    500
                ]
            },
            "random_state": 42
        }
    ]
}
